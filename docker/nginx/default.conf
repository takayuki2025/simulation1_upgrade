server {
    listen 80;
    server_name localhost;

    # 🚨 メインのrootは/publicに固定する
    root /var/www/backend/public; 

    index index.php index.html;

    charset utf-8;

    # 1. すべてのリクエストをindex.phpに渡し、Laravelのルーティングを使用
    location / {
        try_files $uri $uri/ /index.php?$query_string;
    }

    # 2. 静的アセット（CSS, JS, 画像, SVGなど）の処理
    location ~* \.(css|js|jpe?g|gif|png|svg|ico)$ {
        try_files $uri =404;
        access_log off;
        log_not_found off;
        expires max; 
    }

    # 💡 ULTIMATE FIX 4.0: aliasを使用し、locationのURIをスラッシュで終わらせる
    # これにより、NginxはURIをデコードせずに、aliasのパスに「そのまま」結合しようとします。
    # この方法が、+や日本語文字のファイル名を最も確実に取り扱えるはずです。
    location /storage/item_images/ {
        # リクエストURIの /storage/item_images/ より後を
        # /var/www/backend/storage/app/public/item_images/ の後にそのまま結合する
        alias /var/www/backend/storage/app/public/item_images/; 
        
        # aliasを使うため、try_files は不要です (Nginxがaliasのパスを直接探します)
        access_log off;
        log_not_found off;
        expires max;
    }


    # 3. PHPファイルの処理 (php-fpmにリクエストを渡す)
    location ~ \.php$ {
        fastcgi_split_path_info ^(.+\.php)(/.+)$;
        fastcgi_pass php:9000; 
        fastcgi_index index.php;
        include fastcgi_params;
        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
        fastcgi_param PATH_INFO $fastcgi_path_info;
        
        fastcgi_buffers 16 16k;
        fastcgi_buffer_size 32k;
    }

    # 4. .htaccessなどの隠しファイルへのアクセスを拒否
    location ~ /\. {
        deny all;
    }
}